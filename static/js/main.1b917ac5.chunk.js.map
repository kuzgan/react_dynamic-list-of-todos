{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setShowModal","setUserId","setSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","show","userId","handleClick","TodoFilter","query","setQuery","filterByOption","setFilterByOption","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","userData","setUserData","isLoading","setIsLoading","useEffect","getUser","response","href","email","name","App","todosArray","text","option","setTodos","setisLoading","showModal","filterOption","setFilterOption","catch","error","console","filter","lowerCaseTitle","toLowerCase","trim","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b917ac5.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  setShowModal: (show: boolean) => void,\n  setUserId: (id: number) => void,\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, setShowModal, setUserId, setSelectedTodo, selectedTodo,\n}) => {\n  const handleClick = (show: boolean, todo: Todo) => {\n    setShowModal(show);\n    setUserId(todo.userId);\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo === todo,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  handleClick(true, todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': selectedTodo === todo,\n                    'fa-eye': !(selectedTodo === todo),\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterOptions } from '../../types/FilterOptions';\n\ntype Props = {\n  query: string,\n  setQuery: (value: string) => void,\n  filterByOption: FilterOptions,\n  setFilterByOption: (value: FilterOptions) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query, setQuery, filterByOption, setFilterByOption,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterByOption}\n          onChange={(event) => {\n            setFilterByOption(event.target.value as FilterOptions);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query !== '' && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userId: number | null\n  todo: Todo | null\n  setShowModal: (show: false) => void;\n  setSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId, todo, setShowModal, setSelectedTodo,\n}) => {\n  const [userData, setUserData] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (userId !== null) {\n      getUser(userId)\n        .then((response) => {\n          setUserData(response);\n          setIsLoading(false);\n        });\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setShowModal(false);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${userData?.email}`}>\n                {userData?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterOptions } from './types/FilterOptions';\n\nconst handleFilter\n  = (todosArray: Todo[], text: string, option: FilterOptions): Todo[] => {\n    return todosArray.filter((todo) => {\n      const lowerCaseTitle = todo.title.toLowerCase().trim();\n\n      if (option === 'all') {\n        return lowerCaseTitle.includes(text.toLowerCase().trim());\n      }\n\n      if (option === 'active') {\n        return !todo.completed\n        && lowerCaseTitle.includes(text.toLowerCase().trim());\n      }\n\n      if (option === 'completed') {\n        return todo.completed\n        && lowerCaseTitle.includes(text.toLowerCase().trim());\n      }\n\n      return false;\n    });\n  };\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setisLoading] = useState<boolean>(true);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [userId, setUserId] = useState<number | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [filterOption, setFilterOption] = useState<FilterOptions>('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(response => {\n        setTodos(response);\n        setisLoading(false);\n      })\n      // eslint-disable-next-line no-console\n      .catch((error) => console.error(error));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filterByOption={filterOption}\n                setFilterByOption={setFilterOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={handleFilter(todos, query, filterOption)}\n                    setShowModal={setShowModal}\n                    setSelectedTodo={setSelectedTodo}\n                    setUserId={setUserId}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal\n          userId={userId}\n          todo={selectedTodo}\n          setShowModal={setShowModal}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}